cli_name="<%= cli_name %>"
release_name="<%= cli_release_name %>"

darwin_amd64_filename="<%= cli_release_asset_darwin_amd64["name"] %>"
darwin_amd64_url="<%= cli_release_asset_darwin_amd64["url"] %>"

linux_amd64_filename="<%= cli_release_asset_linux_amd64["name"] %>"
linux_amd64_url="<%= cli_release_asset_linux_amd64["url"] %>"

tmp_unarchive_path=${TMPDIR:-/tmp}

# $ man uname
# -a      Behave as though all of the options -mnrsv were specified.
# -m      print the machine hardware name.
# -s      print the operating system name.
os_name=$(uname -s)
os_hardware=$(uname -m)

#         $os_name $os_hardware
# OS X -  Darwin   x86_64
# Linux - Linux    x86_64

if [[ $os_hardware != "x86_64" ]]; then
  echo "Sorry, currently only 64-bit versions of $cli_name are being released"
  exit 1
fi

if [[ $os_name == "Darwin" ]]; then
  export download_url=$darwin_amd64_url
  export filename=$tmp_unarchive_path/$darwin_amd64_filename
  # colors not working when piping to bash shell
  function say_green {
    # echo "\x1B[0;32m$@\x1B[0m"
    echo $@
  }

elif [[ $os_name == "Linux" ]]; then
  export download_url=$linux_amd64_url
  export filename=$tmp_unarchive_path/$linux_amd64_filename
  function say_green {
    echo -e "\e[0;32m$@\e[0m"
  }

else
  echo "Sorry, currently only OS X & Linux versions of $cli_name are being released"
  echo "Please create a ticket to request $os_name $os_hardware releases to be cut; or build the CLI from source"
  echo "Create ticket at https://github.com/cloudfoundry-incubator/spiff/issues/new"
  exit
fi

current_path=$(pwd)
cd $tmp_unarchive_path

if [[ "$(which curl)X" != "X" ]]; then
  echo "Downloading $cli_name '$release_name'..."
  curl -L -H "Accept: application/octet-stream" $download_url -o $filename
fi

cd $current_path
if [[ -f $filename ]]; then
  mv $filename $cli_name
  chmod +x $cli_name
fi

echo "Now run the following to use Cloud Foundry CLI:"
say_green "./$cli_name"
